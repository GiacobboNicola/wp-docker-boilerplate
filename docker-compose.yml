name: "wp-stack"

networks:
  wp-network:
    driver: bridge

services:
  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    container_name: nginx
    restart: unless-stopped
    volumes:
      - ./wordpress:/var/www/html
    ports:
      - 80:80
      - 443:443
    depends_on:
      - php
      - mariadb
    networks:
      - wp-network

  mariadb:
    image: mariadb:11.5.2
    container_name: mariadb
    volumes:
      - ./mariadb:/var/lib/mysql
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - SERVICE_TAGS=dev
      - SERVICE_NAME=mariadb
    restart: unless-stopped
    ports:
      - ${MYSQL_PORT:-3306}:3306
    networks:
      - wp-network

  php:
    build:
      context: ./php
      dockerfile: Dockerfile
    container_name: php
    restart: unless-stopped
    volumes:
      - ./wordpress:/var/www/html
    depends_on:
      - mariadb
      - phpmyadmin
    networks:
      - wp-network

  wp:
    build:
      context: ./php
      dockerfile: Dockerfile
    container_name: wp
    restart: unless-stopped
    entrypoint: ['wp', '--allow-root']
    volumes:
      - ./wordpress:/var/www/html
    networks:
      - wp-network

  phpmyadmin:
    depends_on:
      - mariadb
    image: phpmyadmin/phpmyadmin:5.2.1
    container_name: phpmyadmin
    restart: unless-stopped
    ports:
      - 8180:80
    environment:
      PMA_HOST: mariadb
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    networks:
      - wp-network

  # wait for mariadb to be ready
  wait-for-it:
    image: willwill/wait-for-it
    networks:
      - wp-network
